---
# tasks file for tank.ansible-sync
# TODO: how to do additional check if it's a valid master (i.e. in inventory)?
- name: check if a master host is defined
  fail: msg="You MUST define a master host."
  when: lsyncd_master_hostname == None

- name: check if slave hosts are defined
  fail: msg="You MUST define at least one slave host."
  when: lsyncd_slave_hosts | length == 0 and ansible_hostname == lsyncd_master_hostname

- name: check if sources and targets are defined
  fail: msg="You MUST defined at least one source and one target."
  when: lsyncd_sources_and_targets | length == 0

- name: install lsyncd and accompanying packages
  apt: name={{ item }} state=present
  with_items:
    - rsync
    - lsyncd
    - sudo

- name: raise fs.inotify.max_user_watches on slaves
  lineinfile:
    dest: /etc/sysctl.conf
    state: present
    regexp: '^fs.inotify.max_user_watches'
    line: 'fs.inotify.max_user_watches={{ lsyncd_inotify_max_watches }}'
  notify: reload sysctl
  when: inventory_hostname != lsyncd_master_hostname

- name: make sure lsyncd related directories exist on slaves
  file: path={{ item }} state=directory mode=0700
  with_items:
    - /etc/lsyncd
    - /var/lib/lsyncd
    - '{{ lsyncd_master_identity_file | dirname }}'
    - '{{ source_coredumps_path }}'
  when: inventory_hostname != lsyncd_master_hostname

- name: copy lsyncd main config to slaves
  template:
    src: lsyncd.conf.lua.j2
    dest: /etc/lsyncd/lsyncd.conf.lua
  notify: restart lsyncd
  when: inventory_hostname != lsyncd_master_hostname

- name: Create dumps directory on aggregator
  file:
    state: directory
    path: "/var/log/{{ bc_name }}/coredumps/{{ item }}"
  loop: "{{ ansible_play_hosts_all }}"
  when: inventory_hostname == lsyncd_master_hostname

- name: Copy private file to slaves
  copy:
    src: "{{ lsyncd_pvt_key_path }}"
    dest: /root/.ssh/lsyncd
    owner: root
    mode: 0600
    force: no
  when: inventory_hostname != lsyncd_master_hostname

- name: fix possible ~ permission problem on slaves
  file:
    path: '/root/.ssh/lsyncd'
    owner: 'root'
    group: 'root'
    state: file
    mode: 0600
  when: inventory_hostname != lsyncd_master_hostname

# without setting the password property, password login of the user is disabled
# https://stackoverflow.com/questions/39013796/create-user-with-option-disabled-password-by-ansible
- name: create the user to run rsync on slaves
  user:
    name: '{{ lsyncd_master_username }}'
    home: '/var/lib/{{ lsyncd_master_username }}'
    state: present
  when: inventory_hostname == lsyncd_master_hostname

- name: fix possible ~ permission problem on slaves
  file:
    path: '/var/lib/{{ lsyncd_master_username }}'
    owner: '{{ lsyncd_master_username }}'
    group: '{{ lsyncd_master_username }}'
    state: directory
    mode: 0700
  when: inventory_hostname == lsyncd_master_hostname

- name: make sure ~/.ssh directory exists on master
  file:
    path: '/var/lib/{{ lsyncd_master_username }}/.ssh'
    owner: '{{ lsyncd_master_username }}'
    group: '{{ lsyncd_master_username }}'
    state: directory
    mode: 0700
  when: inventory_hostname == lsyncd_master_hostname

- name: create ~/.ssh/authorized_keys on master
  authorized_key:
    user: '{{ lsyncd_master_username }}'
    state: present
    key: "{{ lookup('file', lsyncd_pub_key_path ) }}"
  when: inventory_hostname == lsyncd_master_hostname

- name: ssh into master once to save host keys on slaves
  command: |
    ssh -i {{ lsyncd_master_identity_file }} -l {{ lsyncd_master_username }} \
    -o StrictHostKeyChecking=no \
    {{ hostvars[lsyncd_master_hostname]['ansible_'+bc_private_interface]['ipv4']['address'] }}
  when: inventory_hostname != lsyncd_master_hostname
  changed_when: False

# {{ lsyncd_master_username }} is allowed to 'sudo rsync' without entering password
- name: grant sudo privilege on masters
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^{{ lsyncd_master_username }}'
    line: '{{ lsyncd_master_username }} ALL=(ALL) NOPASSWD: /usr/bin/rsync'
    validate: 'visudo -cf %s'
  when: inventory_hostname == lsyncd_master_hostname

- name: enable lsyncd service on slaves
  service: name=lsyncd enabled=yes state=started
  when: inventory_hostname != lsyncd_master_hostname

- name: disable lsyncd service on master
  service: name=lsyncd enabled=no state=stopped
  when: inventory_hostname == lsyncd_master_hostname
